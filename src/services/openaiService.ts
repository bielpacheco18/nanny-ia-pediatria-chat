
import { supabase } from '@/integrations/supabase/client';

export interface ChatMessage {
  role: 'system' | 'user' | 'assistant';
  content: string;
}

export class OpenAIService {
  private apiKey: string | null = null;

  constructor() {
    // Debug log to check environment
    console.log('Checking environment variables...');
    console.log('import.meta.env:', import.meta.env);
    
    // Em Vite, use import.meta.env ao inv√©s de process.env
    try {
      this.apiKey = import.meta.env.VITE_OPENAI_API_KEY || null;
      console.log('API Key loaded:', this.apiKey ? 'Yes (hidden)' : 'No');
    } catch (error) {
      console.error('Error accessing environment variable:', error);
      this.apiKey = null;
    }
  }

  setApiKey(key: string) {
    this.apiKey = key;
  }

  async getKnowledgeBaseFromSupabase(): Promise<string> {
    try {
      console.log('Fetching knowledge base from Supabase...');
      const { data: knowledgeBase, error } = await supabase
        .from('knowledge_base')
        .select('title, content')
        .eq('status', 'processed');

      if (error) {
        console.error('Error fetching knowledge base:', error);
        return '';
      }

      console.log('Knowledge base data:', knowledgeBase);
      console.log('Number of documents found:', knowledgeBase?.length || 0);

      if (!knowledgeBase || knowledgeBase.length === 0) {
        console.log('No processed documents found in knowledge base');
        return '';
      }

      const combinedContent = knowledgeBase
        .filter(item => item.content && item.content.trim().length > 0)
        .map(item => `T√≠tulo: ${item.title}\n\nConte√∫do:\n${item.content}`)
        .join('\n\n---\n\n');

      console.log('Combined content length:', combinedContent.length);
      return combinedContent;
    } catch (error) {
      console.error('Error accessing Supabase:', error);
      return '';
    }
  }

  async generateResponse(userMessage: string, conversationHistory: ChatMessage[] = []): Promise<string> {
    console.log('Generating response for:', userMessage);
    
    // Buscar base de conhecimento do Supabase
    const knowledgeBase = await this.getKnowledgeBaseFromSupabase();
    console.log('Knowledge base available:', knowledgeBase.length > 0);
    
    // Se n√£o h√° base de conhecimento no Supabase, retornar mensagem informativa
    if (!knowledgeBase || knowledgeBase.trim().length === 0) {
      return 'Ainda n√£o tenho informa√ß√µes m√©dicas suficientes na base de conhecimento para responder a essa quest√£o. Por favor, adicione materiais pedi√°tricos na se√ß√£o "Base de Conhecimento" para que eu possa te ajudar com conhecimento m√©dico especializado. Para quest√µes urgentes, sempre consulte seu pediatra. üíú';
    }
    
    // Se h√° chave da API, usar OpenAI com a base de conhecimento
    if (this.apiKey) {
      try {
        const systemPrompt = `Voc√™ √© a Nanny, uma pediatra virtual acolhedora e emp√°tica especializada em cuidados infantis. 

PERSONA: Voc√™ √© calorosa, compreensiva e sempre valida os sentimentos dos pais. Use express√µes como "Respira comigo", "Isso n√£o √© frescura", "Vamos juntas descobrir". Seja t√©cnica quando necess√°rio, mas sempre de forma acess√≠vel.

IMPORTANTE: Baseie suas respostas EXCLUSIVAMENTE nas informa√ß√µes m√©dicas e pedi√°tricas fornecidas abaixo. Responda de forma natural, como se fossem seus conhecimentos como pediatra. NUNCA mencione que est√° consultando documentos ou base de conhecimento.

BASE DE CONHECIMENTO M√âDICO:
${knowledgeBase}

INSTRU√á√ïES IMPORTANTES:
- Responda APENAS com base nas informa√ß√µes m√©dicas fornecidas acima
- NUNCA mencione "base de conhecimento", "documentos", "materiais", "PDFs" ou "com base no meu conhecimento m√©dico"
- Responda de forma natural, como se fosse seu conhecimento m√©dico pr√≥prio e experi√™ncia como pediatra
- Se a informa√ß√£o espec√≠fica n√£o estiver dispon√≠vel no conte√∫do m√©dico fornecido, seja honesta e diga que precisa de mais detalhes para dar uma orienta√ß√£o espec√≠fica
- Seja emp√°tica e acolhedora no tom
- Mantenha o foco em orienta√ß√µes pedi√°tricas baseadas no conte√∫do m√©dico dispon√≠vel
- Se for uma emerg√™ncia, sempre oriente a procurar ajuda m√©dica imediata
- Use o conte√∫do m√©dico fornecido para dar respostas espec√≠ficas e detalhadas de forma natural

LEMBRETE: Voc√™ √© um apoio educativo. Em casos s√©rios ou emerg√™ncias, sempre oriente a buscar um pediatra presencialmente.`;

        const messages: ChatMessage[] = [
          { role: 'system', content: systemPrompt },
          ...conversationHistory.slice(-6), // Manter apenas as √∫ltimas 6 mensagens para contexto
          { role: 'user', content: userMessage }
        ];

        console.log('Sending request to OpenAI...');
        const response = await fetch('https://api.openai.com/v1/chat/completions', {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${this.apiKey}`,
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            model: 'gpt-4o-mini',
            messages: messages,
            temperature: 0.7,
            max_tokens: 800,
          }),
        });

        if (!response.ok) {
          throw new Error(`API Error: ${response.status}`);
        }

        const data = await response.json();
        const aiResponse = data.choices[0]?.message?.content || 'Desculpe, n√£o consegui gerar uma resposta no momento.';
        console.log('OpenAI response received');
        return aiResponse;
      } catch (error) {
        console.error('Erro ao chamar OpenAI:', error);
        // Fallback para resposta baseada apenas na base de conhecimento
        return this.generateKnowledgeBasedResponse(userMessage, knowledgeBase);
      }
    }

    // Se n√£o h√° chave da API, usar respostas baseadas na base de conhecimento
    return this.generateKnowledgeBasedResponse(userMessage, knowledgeBase);
  }

  private async generateKnowledgeBasedResponse(userMessage: string, knowledgeBase: string): Promise<string> {
    const lowerMessage = userMessage.toLowerCase();
    console.log('Generating knowledge-based response...');
    console.log('Knowledge base content length:', knowledgeBase?.length || 0);
    console.log('User message:', userMessage);
    
    // Buscar por palavras-chave na base de conhecimento
    const knowledgeWords = knowledgeBase.toLowerCase();
    
    // Extrair palavras-chave da pergunta do usu√°rio
    const keywords = lowerMessage.split(' ').filter(word => word.length > 3);
    console.log('Keywords found:', keywords);
    
    // Verificar se alguma palavra-chave est√° presente na base de conhecimento
    const relevantInfo = keywords.some(keyword => knowledgeWords.includes(keyword));
    console.log('Relevant info found in knowledge base:', relevantInfo);
    
    if (relevantInfo) {
      // Tentar encontrar se√ß√µes relevantes da base de conhecimento
      const sentences = knowledgeBase.split(/[.!?]+/).filter(sentence => sentence.trim().length > 20);
      const relevantSentences = sentences.filter(sentence => {
        const sentenceLower = sentence.toLowerCase();
        return keywords.some(keyword => sentenceLower.includes(keyword));
      });
      
      console.log('Relevant sentences found:', relevantSentences.length);
      
      if (relevantSentences.length > 0) {
        // Usar as informa√ß√µes relevantes para construir uma resposta natural
        const info = relevantSentences.slice(0, 3).join('. ').trim();
        return `${info}. Lembre-se que cada crian√ßa √© √∫nica e pode ter varia√ß√µes. Se tiver d√∫vidas espec√≠ficas sobre seu pequeno, sempre consulte seu pediatra de confian√ßa. Voc√™ est√° fazendo um √≥timo trabalho! üíú`;
      }
    }
    
    // Respostas espec√≠ficas baseadas no conhecimento dispon√≠vel
    if (lowerMessage.includes('febre')) {
      const feverInfo = knowledgeBase.toLowerCase().includes('febre') ? 
        knowledgeBase.split(/[.!?]+/).filter(s => s.toLowerCase().includes('febre')).slice(0, 2).join('. ') : '';
      if (feverInfo) {
        return `${feverInfo}. Respira comigo - voc√™ est√° cuidando bem do seu beb√™. Para orienta√ß√µes espec√≠ficas sobre o seu caso, consulte seu pediatra.`;
      }
    }
    
    if (lowerMessage.includes('amament') || lowerMessage.includes('leite')) {
      const breastfeedingInfo = knowledgeBase.toLowerCase().includes('amament') ? 
        knowledgeBase.split(/[.!?]+/).filter(s => s.toLowerCase().includes('amament')).slice(0, 2).join('. ') : '';
      if (breastfeedingInfo) {
        return `${breastfeedingInfo}. Isso n√£o √© frescura - voc√™ est√° fazendo o melhor para seu pequeno! üíú`;
      }
    }
    
    if (lowerMessage.includes('sono') || lowerMessage.includes('dormir')) {
      const sleepInfo = knowledgeBase.toLowerCase().includes('sono') ? 
        knowledgeBase.split(/[.!?]+/).filter(s => s.toLowerCase().includes('sono')).slice(0, 2).join('. ') : '';
      if (sleepInfo) {
        return `${sleepInfo}. Respira comigo - essa fase passa e voc√™s v√£o encontrar o equil√≠brio. üíú`;
      }
    }
    
    // Resposta geral quando h√° base de conhecimento mas n√£o √© espec√≠fica
    const generalInfo = knowledgeBase.split(/[.!?]+/).slice(0, 2).join('. ').trim();
    if (generalInfo) {
      return `${generalInfo}. Para te dar uma orienta√ß√£o mais precisa e personalizada para seu beb√™, seria importante conversar sobre mais detalhes da situa√ß√£o. Cada crian√ßa √© √∫nica e merece cuidado individualizado. Voc√™ est√° fazendo um trabalho incr√≠vel! üíú`;
    }
    
    // Se chegou at√© aqui, significa que n√£o h√° informa√ß√µes relevantes
    return 'N√£o encontrei informa√ß√µes espec√≠ficas sobre essa quest√£o na minha base de conhecimento atual. Te encorajo a adicionar mais materiais pedi√°tricos na se√ß√£o "Base de Conhecimento" para que eu possa te ajudar melhor. Para quest√µes urgentes, sempre consulte seu pediatra. Voc√™ est√° fazendo um √≥timo trabalho! üíú';
  }
}
