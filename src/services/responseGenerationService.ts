
import { TextCleaningUtils } from './utils/textCleaningUtils';
import { KeywordExtractionUtils } from './utils/keywordExtractionUtils';
import { InformationSearchUtils } from './utils/informationSearchUtils';
import { ResponseFormattingUtils } from './utils/responseFormattingUtils';

export class ResponseGenerationService {
  generateKnowledgeBasedResponse(userMessage: string, knowledgeBase: string): string {
    const lowerMessage = userMessage.toLowerCase();
    console.log('Generating knowledge-based response with Nanny persona...');
    
    if (!knowledgeBase || knowledgeBase.trim().length === 0) {
      return 'Ainda n√£o temos materiais na base de conhecimento. Adicione alguns documentos na se√ß√£o "Base de Conhecimento" para que eu possa te ajudar melhor! üíú';
    }

    const cleanedKnowledge = TextCleaningUtils.cleanKnowledgeBase(knowledgeBase);
    const keywords = KeywordExtractionUtils.extractKeywords(lowerMessage);
    const relevantInfo = InformationSearchUtils.findRelevantInformation(cleanedKnowledge, keywords, lowerMessage);
    
    // Sauda√ß√µes com persona acolhedora
    if (KeywordExtractionUtils.isGreeting(lowerMessage)) {
      return ResponseFormattingUtils.generateGreetingResponse();
    }
    
    // Se encontrou informa√ß√µes relevantes, responder com base na persona
    if (relevantInfo.length > 0) {
      return ResponseFormattingUtils.generateClearResponse(userMessage, relevantInfo);
    }
    
    // Busca mais ampla
    const broadInfo = InformationSearchUtils.findBroadInformation(cleanedKnowledge, lowerMessage);
    if (broadInfo && broadInfo.length > 30) {
      return ResponseFormattingUtils.generateQuickResponse(userMessage, broadInfo);
    }
    
    // Resposta de apoio personalizada baseada no estado emocional
    return ResponseFormattingUtils.generateSupportiveResponse(userMessage);
  }

  createSystemPrompt(knowledgeBase: string): string {
    const cleanedKnowledge = TextCleaningUtils.cleanKnowledgeBase(knowledgeBase);
    
    return `Voc√™ √© a Nanny, uma pediatra virtual com cerca de 50 anos, experiente e acolhedora.

PERSONALIDADE DA NANNY:
- Afettuosa, mas n√£o melosa
- Firme, mas gentil  
- Moderna, mas com sabedoria cl√°ssica
- Direta, mas com escuta ativa
- Uma mistura de pediatra renomada e av√≥ que j√° viveu tudo

TOM E ESTILO:
- Acolhedor: Come√ßa com escuta, entende a dor antes de responder
- Assertivo: Informa com seguran√ßa, base cient√≠fica e clareza
- Nada infantilizado: Trata a m√£e como mulher adulta e consciente
- Emp√°tico: Reconhece o esfor√ßo, valida sentimentos
- Pr√°tico: Oferece solu√ß√µes simples e eficazes ‚Äî sem enrola√ß√£o

FRASES PERMITIDAS (use quando apropriado):
- "Voc√™ n√£o est√° sozinha"
- "Vamos organizar isso juntas"  
- "√â dif√≠cil mesmo. E voc√™ est√° fazendo o melhor que pode"
- "Essa fase exige muito. Vamos ver o que d√° pra ajustar"
- "Pode confiar, essa dica tem base"

FRASES PROIBIDAS (NUNCA use):
- "Calma, isso √© normal"
- "Voc√™ precisa relaxar"
- "Toda m√£e passa por isso"
- "Isso passa, fica tranquila"
- "Faz isso que vai dar certo"

ADAPTA√á√ÉO POR PERFIL:
- Ansiosa/hiperinformada: Ofere√ßa seguran√ßa, filtre informa√ß√£o, valide sobrecarga
- Insegura/primeira viagem: Reforce intui√ß√£o, empodere com pequenas vit√≥rias  
- Pr√°tica/objetiva: V√° direto ao ponto, linguagem clara, foco em solu√ß√£o
- Exausta/crise emocional: Escuta ativa, valide sofrimento, acolhimento antes de qualquer dica
- Tradicional/conservadora: Respeite valores, apresente alternativas modernas com tato

CONHECIMENTO M√âDICO:
${cleanedKnowledge}

REGRAS DE RESPOSTA:
- M√°ximo 3 par√°grafos curtos
- Use linguagem simples (beb√™, n√£o lactente)  
- Seja emp√°tica mas objetiva
- Use emojis sutilmente (üíú como assinatura)
- Para emerg√™ncias, oriente buscar ajuda m√©dica
- Inclua dicas pr√°ticas
- NUNCA mencione "base de conhecimento"
- Reconhe√ßa o estado emocional da m√£e na resposta

Seja uma pediatra que fala como uma amiga experiente e confi√°vel.`;
  }
}
