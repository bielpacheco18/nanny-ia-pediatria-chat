
export class ResponseGenerationService {
  generateKnowledgeBasedResponse(userMessage: string, knowledgeBase: string): string {
    const lowerMessage = userMessage.toLowerCase();
    console.log('Generating knowledge-based response...');
    console.log('Knowledge base content length:', knowledgeBase?.length || 0);
    console.log('User message:', userMessage);
    
    if (!knowledgeBase || knowledgeBase.trim().length === 0) {
      return 'Ainda n√£o temos documentos pedi√°tricos na base de conhecimento. Por favor, adicione alguns materiais na se√ß√£o "Base de Conhecimento" para que eu possa te ajudar melhor. üíú';
    }

    // Buscar por palavras-chave na base de conhecimento de forma mais ampla
    const knowledgeWords = knowledgeBase.toLowerCase();
    
    // Extrair palavras-chave da pergunta do usu√°rio (incluindo palavras menores)
    const keywords = lowerMessage.split(' ').filter(word => word.length > 2);
    console.log('Keywords found:', keywords);
    
    // Verificar se alguma palavra-chave est√° presente na base de conhecimento
    const relevantInfo = keywords.some(keyword => knowledgeWords.includes(keyword));
    console.log('Relevant info found in knowledge base:', relevantInfo);
    
    // Respostas para sauda√ß√µes e mensagens curtas usando a base de conhecimento
    if (lowerMessage.includes('oi') || lowerMessage.includes('ol√°') || lowerMessage.includes('hello') || lowerMessage.length < 4) {
      const introInfo = this.extractGeneralInfo(knowledgeBase);
      return `Ol√°! Eu sou a Nanny, sua pediatra virtual! üíú 

${introInfo}

Estou aqui para te ajudar com qualquer d√∫vida sobre o cuidado do seu pequeno. O que voc√™ gostaria de saber hoje?`;
    }
    
    if (relevantInfo) {
      // Tentar encontrar se√ß√µes relevantes da base de conhecimento
      const sentences = knowledgeBase.split(/[.!?]+/).filter(sentence => sentence.trim().length > 15);
      const relevantSentences = sentences.filter(sentence => {
        const sentenceLower = sentence.toLowerCase();
        return keywords.some(keyword => sentenceLower.includes(keyword));
      });
      
      console.log('Relevant sentences found:', relevantSentences.length);
      
      if (relevantSentences.length > 0) {
        // Usar as informa√ß√µes relevantes para construir uma resposta natural
        const info = relevantSentences.slice(0, 3).join('. ').trim();
        return `${info}. 

Lembre-se que cada crian√ßa √© √∫nica e pode ter varia√ß√µes. Se tiver d√∫vidas espec√≠ficas sobre seu pequeno, sempre consulte seu pediatra de confian√ßa. Voc√™ est√° fazendo um √≥timo trabalho! üíú`;
      }
    }
    
    // Respostas espec√≠ficas baseadas no conhecimento dispon√≠vel
    if (lowerMessage.includes('febre')) {
      const feverInfo = this.findSpecificInfo(knowledgeBase, ['febre', 'temperatura']);
      if (feverInfo) {
        return `${feverInfo}

Respira comigo - voc√™ est√° cuidando bem do seu beb√™. Para orienta√ß√µes espec√≠ficas sobre o seu caso, consulte seu pediatra. üíú`;
      }
    }
    
    if (lowerMessage.includes('amament') || lowerMessage.includes('leite')) {
      const breastfeedingInfo = this.findSpecificInfo(knowledgeBase, ['amament', 'leite', 'mama']);
      if (breastfeedingInfo) {
        return `${breastfeedingInfo}

Isso n√£o √© frescura - voc√™ est√° fazendo o melhor para seu pequeno! üíú`;
      }
    }
    
    if (lowerMessage.includes('sono') || lowerMessage.includes('dormir')) {
      const sleepInfo = this.findSpecificInfo(knowledgeBase, ['sono', 'dormir', 'descanso']);
      if (sleepInfo) {
        return `${sleepInfo}

Respira comigo - essa fase passa e voc√™s v√£o encontrar o equil√≠brio. üíú`;
      }
    }

    if (lowerMessage.includes('c√≥lica') || lowerMessage.includes('choro')) {
      const colicInfo = this.findSpecificInfo(knowledgeBase, ['c√≥lica', 'choro', 'desconforto']);
      if (colicInfo) {
        return `${colicInfo}

Vamos juntas descobrir o que pode estar causando esse desconforto. Voc√™ est√° sendo uma m√£e incr√≠vel! üíú`;
      }
    }
    
    // Se h√° base de conhecimento mas n√£o encontrou algo espec√≠fico, dar uma resposta mais geral
    const generalInfo = this.extractGeneralInfo(knowledgeBase);
    if (generalInfo) {
      return `${generalInfo}

Para te dar uma orienta√ß√£o mais precisa e personalizada para seu beb√™, seria importante conversar sobre mais detalhes da situa√ß√£o. Cada crian√ßa √© √∫nica e merece cuidado individualizado. 

Pode me contar mais sobre o que est√° te preocupando? Voc√™ est√° fazendo um trabalho incr√≠vel! üíú`;
    }
    
    // Se chegou at√© aqui, significa que n√£o conseguiu extrair informa√ß√µes √∫teis
    return 'Vejo que temos alguns documentos na base de conhecimento, mas n√£o consegui encontrar informa√ß√µes espec√≠ficas sobre sua quest√£o. Te encorajo a adicionar mais materiais pedi√°tricos detalhados na se√ß√£o "Base de Conhecimento" para que eu possa te ajudar melhor. Para quest√µes urgentes, sempre consulte seu pediatra. Voc√™ est√° fazendo um √≥timo trabalho! üíú';
  }

  private findSpecificInfo(knowledgeBase: string, keywords: string[]): string {
    const sentences = knowledgeBase.split(/[.!?]+/).filter(sentence => sentence.trim().length > 15);
    const relevantSentences = sentences.filter(sentence => {
      const sentenceLower = sentence.toLowerCase();
      return keywords.some(keyword => sentenceLower.includes(keyword));
    });
    
    if (relevantSentences.length > 0) {
      return relevantSentences.slice(0, 2).join('. ').trim();
    }
    
    return '';
  }

  private extractGeneralInfo(knowledgeBase: string): string {
    // Extrair informa√ß√µes gerais mais √∫teis da base de conhecimento
    const sentences = knowledgeBase.split(/[.!?]+/).filter(sentence => {
      const sentence_clean = sentence.trim();
      return sentence_clean.length > 20 && 
             !sentence_clean.toLowerCase().includes('conte√∫do extra√≠do') &&
             !sentence_clean.toLowerCase().includes('este √© um conte√∫do simulado');
    });
    
    if (sentences.length > 0) {
      return sentences.slice(0, 2).join('. ').trim();
    }
    
    return '';
  }

  createSystemPrompt(knowledgeBase: string): string {
    return `Voc√™ √© a Nanny, uma pediatra virtual acolhedora e emp√°tica especializada em cuidados infantis. 

PERSONA: Voc√™ √© calorosa, compreensiva e sempre valida os sentimentos dos pais. Use express√µes como "Respira comigo", "Isso n√£o √© frescura", "Vamos juntas descobrir". Seja t√©cnica quando necess√°rio, mas sempre de forma acess√≠vel.

IMPORTANTE: Baseie suas respostas EXCLUSIVAMENTE nas informa√ß√µes m√©dicas e pedi√°tricas fornecidas abaixo. Responda de forma natural, como se fossem seus conhecimentos como pediatra. NUNCA mencione que est√° consultando documentos ou base de conhecimento.

BASE DE CONHECIMENTO M√âDICO:
${knowledgeBase}

INSTRU√á√ïES IMPORTANTES:
- Responda APENAS com base nas informa√ß√µes m√©dicas fornecidas acima
- NUNCA mencione "base de conhecimento", "documentos", "materiais", "PDFs" ou "com base no meu conhecimento m√©dico"
- Responda de forma natural, como se fosse seu conhecimento m√©dico pr√≥prio e experi√™ncia como pediatra
- Se a informa√ß√£o espec√≠fica n√£o estiver dispon√≠vel no conte√∫do m√©dico fornecido, seja honesta e diga que precisa de mais detalhes para dar uma orienta√ß√£o espec√≠fica
- Seja emp√°tica e acolhedora no tom
- Mantenha o foco em orienta√ß√µes pedi√°tricas baseadas no conte√∫do m√©dico dispon√≠vel
- Se for uma emerg√™ncia, sempre oriente a procurar ajuda m√©dica imediata
- Use o conte√∫do m√©dico fornecido para dar respostas espec√≠ficas e detalhadas de forma natural

LEMBRETE: Voc√™ √© um apoio educativo. Em casos s√©rios ou emerg√™ncias, sempre oriente a buscar um pediatra presencialmente.`;
  }
}
